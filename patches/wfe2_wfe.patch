diff --git a/wfe2/wfe.go b/wfe2/wfe.go
index fe063e4fa..2f7aea67b 100644
--- a/wfe2/wfe.go
+++ b/wfe2/wfe.go
@@ -163,6 +163,8 @@ type WebFrontEndImpl struct {
 	// descriptions (perhaps including URLs) of those profiles. NewOrder
 	// Requests with a profile name not present in this map will be rejected.
 	certProfiles map[string]string
+
+	pa *policy.AuthorityImpl
 }
 
 // NewWebFrontEndImpl constructs a web service for Boulder
@@ -188,6 +190,7 @@ func NewWebFrontEndImpl(
 	unpauseSigner unpause.JWTSigner,
 	unpauseJWTLifetime time.Duration,
 	unpauseURL string,
+	pa *policy.AuthorityImpl,
 ) (WebFrontEndImpl, error) {
 	if len(issuerCertificates) == 0 {
 		return WebFrontEndImpl{}, errors.New("must provide at least one issuer certificate")
@@ -205,6 +208,10 @@ func NewWebFrontEndImpl(
 		return WebFrontEndImpl{}, errors.New("must provide a service for nonce redemption")
 	}
 
+	if pa == nil {
+		return WebFrontEndImpl{}, errors.New("must provide a policy authority")
+	}
+
 	wfe := WebFrontEndImpl{
 		log:                logger,
 		clk:                clk,
@@ -227,6 +234,7 @@ func NewWebFrontEndImpl(
 		unpauseSigner:      unpauseSigner,
 		unpauseJWTLifetime: unpauseJWTLifetime,
 		unpauseURL:         unpauseURL,
+		pa:                 pa,
 	}
 
 	return wfe, nil
@@ -617,7 +625,7 @@ func link(url, relation string) string {
 // contactsToEmails converts a *[]string of contacts (e.g. mailto:
 // person@example.com) to a []string of valid email addresses. Non-email
 // contacts or contacts with invalid email addresses are ignored.
-func contactsToEmails(contacts *[]string) []string {
+func contactsToEmails(contacts *[]string, pa *policy.AuthorityImpl) []string {
 	if contacts == nil {
 		return nil
 	}
@@ -627,7 +635,7 @@ func contactsToEmails(contacts *[]string) []string {
 			continue
 		}
 		address := strings.TrimPrefix(c, "mailto:")
-		err := policy.ValidEmail(address)
+		err := pa.ValidEmail(address)
 		if err != nil {
 			continue
 		}
@@ -851,7 +859,7 @@ func (wfe *WebFrontEndImpl) NewAccount(
 	}
 	newRegistrationSuccessful = true
 
-	emails := contactsToEmails(accountCreateRequest.Contact)
+	emails := contactsToEmails(accountCreateRequest.Contact, wfe.pa)
 	if wfe.ee != nil && len(emails) > 0 {
 		_, err := wfe.ee.SendContacts(ctx, &emailpb.SendContactsRequest{
 			// Note: We are explicitly using the contacts provided by the
@@ -2285,7 +2293,7 @@ func (wfe *WebFrontEndImpl) NewOrder(
 	}
 
 	names = core.UniqueLowerNames(names)
-	err = policy.WellFormedDomainNames(names)
+	err = wfe.pa.WellFormedDomainNames(names)
 	if err != nil {
 		wfe.sendError(response, logEvent, web.ProblemDetailsForError(err, "Invalid identifiers requested"), nil)
 		return
